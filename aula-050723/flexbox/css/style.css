/* Configuração ideal */
*{
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

/* Configuração ideal */
.container-1{
    background-color: brown;
    padding: 12px; /* só para enxergarmos o container */
    display: flex; /* ativa o flexbox --> SEMPRE usada no container, para que o restante possa herdar */
    /* Aceita -> row, column */
    flex-direction: row; /* Não é necessário colocarmos em row, porque row é o padrão do display: flex; */
    /* nowrap (valor padrão), wrap = indica se pode quebrar linha se não houver espaço */
    flex-wrap: wrap; /* usado para responsividade em celulares e outros.. */
    /* ! -IMPORTANTE- ! (flex-flow) */
    /* flex-flow: row wrap; (Atalho para flex-direction e flex-wrap). */
    /* Valores: start, end (jogar para o final), center, space-between (espaço entre), space-evenly (entre os elementos e nas laterais os espaços são aplicados), space-around (espaço em volta). space-around -> ajusta os elementos no main -> horizontal */
    justify-content: space-between; /* --> o justify-content: é usado no flex-direction: row . display: flex com o justify-content: center pode ser usado para centralizar botões, formulários, etc*/
    /* Valores: stretch, flex-start, flex-end, center */
    align-items: center; /* --> vai alinhar os elementos mesmo que um deles for maior que o outro, sem esticar os outros. ! --> O container obedecerá o tramanho do maior elemento. ! --> Ajusta os elementos no eixo cross */
    /* space-between, space-around, center, flex-start, flex-end */
    /* align-content: flex-end ; Só serve se tiver linhas (altura). ! --> Ajusta em um todo */

    height: 600px;
}

.item-1{
    background-color: orange;
}

.item-2{
    background-color: greenyellow;
}

.item-3{
    background-color: gold;
    /* Mesmos valores do align-items */
    align-self: flex-start ; /* sobrescreve o alinhamento do container pai no eixo cross */
}

.item-4{
    background-color: hotpink;
}

.item-1, .item-2, .item-3, .item-4{ /* Lista de Seletores */
    width: 200px; /* se diminuirmos a tela o flexbox não obedecerá os valores (não quebra linha, por isso colocamos flex-wrap: wrap -> indicado no container 1)*/
    padding: 8px;
}

.container-2{
    background-color: chocolate;
    height: 250px;
    display: flex;
}

.coluna-1{
    background-color: tan;
    width: 200px;
}

    .coluna-2{
    background-color: aqua;
    /* 1/2 */
    flex: 1; /* ocupa uma porção do espaço disponível */
}

.coluna-3{
    background-color: tomato;
    /* 1/2 */
    flex: 1; /* ocupa uma porção do espaço disponível */
}

